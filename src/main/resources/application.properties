# ===============================
# = DATA SOURCE PRIMARY
# ===============================
datasource.primary.url = jdbc:mysql://localhost:3306/demo
datasource.primary.username = root
datasource.primary.password = root
datasource.primary.testWhileIdle = true
datasource.primary.validationQuery = SELECT 1

# ===============================
# = DATA SOURCE SECONDARY
# ===============================
datasource.secondary.url = jdbc:mysql://localhost:3306/recivedemo
datasource.secondary.username = root
datasource.secondary.password = root
datasource.secondary.testWhileIdle = true
datasource.secondary.validationQuery = SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = update

#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
